# -*- coding: utf-8 -*-
"""house.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dYG4Ts7Puh9NICADKKJwFCRASm4P2DRO
"""

from sklearn.datasets import fetch_california_housing

# 載入加州房價資料集
california = fetch_california_housing()

# 轉換資料為 DataFrame
data = pd.DataFrame(california.data, columns=california.feature_names)
data['Price'] = california.target  # 加入房價標籤

# 其餘流程與上面相同

# 載入必要的函式庫
import numpy as np
from sklearn.datasets import fetch_california_housing  # 使用加州房價資料集
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error
import pandas as pd

# 載入加州房價資料集
california = fetch_california_housing()

# 轉換資料為 DataFrame
data = pd.DataFrame(california.data, columns=california.feature_names)
data['Price'] = california.target  # 加入房價標籤

# 特徵與目標變數分開
X = data.drop(columns=['Price'])  # 除了 'Price' 以外的所有欄位是特徵
y = data['Price']  # 'Price' 是目標變數

# 分割資料集為訓練集和測試集
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 標準化數值資料
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# 建立並訓練線性回歸模型
lin_reg = LinearRegression()
lin_reg.fit(X_train_scaled, y_train)

# 預測並計算 MSE (均方誤差)
y_pred = lin_reg.predict(X_test_scaled)
mse_lin_reg = mean_squared_error(y_test, y_pred)
print(f'線性回歸 MSE: {mse_lin_reg}')

# 建立並訓練隨機森林回歸模型

pip install scikit-learn pandas numpy

pip instal numpy